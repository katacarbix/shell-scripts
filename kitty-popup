#!/usr/bin/env bash

# Create a popup terminal window with kitty and i3

print_usage () {
	echo "Usage: $0 <type> [options] -c command"
	echo "-h, --help      Show this help message."
	echo "<type>          The window type. Can be one of: floating, fullscreen."
	echo "[options]       Options for the window type. Columns and rows are"
	echo "                  required for the floating window type."
	echo "-c command      The command to run in the popup window."
	echo "                  Must come after all other arguments."
}

fullscreen=1
cols=
rows=
command=""

shopt -s extglob
while(($#)); do
	case "$1" in
		-h | --help | help )
			print_usage
			exit 0
			;;
		fullscreen )
			fullscreen=0
			;;
		floating )
			fullscreen=1
			;;
		+([0-9]) )
			if [ $fullscreen == 1 ]; then
				if [ -z "$cols" ]; then
					cols=$1
				elif [ -z "$rows" ]; then
					rows=$1
				else
					echo "Too many numbers were given!"
					exit 1
				fi
			else
				echo "The fullscreen window type doesn't take any options!"
				exit 1
			fi
			;;
		-c )
			shift
			command="$@"
			break
			;;
	esac
	shift
done

if [ $fullscreen == 1 ] && ([ -z "$cols" ] || [ -z "$rows" ]); then
	echo "Floating windows require the number of both columns and rows to be given!"
	exit 1
fi

if [ -z "$KITTY_ID" ]; then
	KITTY_ID=$RANDOM
fi
echo $KITTY_ID

kitty -o allow_remote_control=yes --listen-on unix:/tmp/kitty-popup_$KITTY_ID bash &
sleep 0.5s

if [ $fullscreen == 0 ]; then
	i3-msg fullscreen enable
else
	read -r font_size padding <<< `grep -E '(font_size|window_padding_width)' ~/.config/kitty/kitty.conf | sed -E 's/^[a-z_]+\s+([0-9\.]*)$/\1/' | tr "\n" " "`
	width=`echo print\(round\($font_size\*0.82\)\*$cols + round\($padding\*8\/3\) + 4\) | python3`
	height=`echo print\(round\($font_size\*1.66\)\*$rows + round\($padding\*8\/3\) + 4\) | python3`
	shift 2

	i3-msg floating enable
	i3-msg resize set $width px $height px
	i3-msg move position center
fi

sleep 0.3s
kitty @ --to unix:/tmp/kitty-popup_$KITTY_ID send-text "clear;$command\n"
